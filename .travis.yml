language: go
dist: bionic

go:
  - 1.15.x

os: linux

arch:
  - amd64
  - arm64
  - ppc64le
  - s390x

env:
  global:
  - PATH=$GOROOT/bin:$GOPATH/bin:$PATH
  - CGO_ENABLED=0

jobs:
  fast_finish: true
  allow_failures:
    # just too slow to run the test suite
    - arch: s390x
  include:
    - os: windows
      arch: amd64
      go: 1.15.x
    - name: "compile all supported architectures, go 1.14"
      env:
        - "TARGET='amd64 386 arm arm64 s390x mips64le ppc64le'"
        - SKIP_TESTS=1
      go: 1.14.x
      os: linux
      arch: amd64
    - name: "compile all supported architectures, go 1.15"
      env:
        - "TARGET='amd64 386 arm arm64 s390x mips64le ppc64le'"
        - SKIP_TESTS=1
      go: 1.15.x
      os: linux
      arch: amd64

install:
  - go get github.com/onsi/ginkgo/ginkgo
  - go get github.com/containernetworking/cni/cnitool
  - go get golang.org/x/tools/cmd/cover
  - go get github.com/modocache/gover
  - go get github.com/mattn/goveralls
  # installing the tools has changed our vendoring; undo that
  - git checkout -- go.mod go.sum


script:
  - |
    TARGET=${TARGET:-$(go env GOARCH)}
    if [[ ${TRAVIS_OS_NAME} == linux ]]; then
      ip addr
      ip link
      ip route
      ip -6 route
      sudo iptables-save
    fi
    for tgt in ${TARGET}; do
      if [[ "${tgt}" == $(go env GOARCH) && -z ${SKIP_TESTS} ]]; then
        echo "testing GOARCH=${tgt}"
        GOARCH=${tgt} ./test_${TRAVIS_OS_NAME}.sh || exit 1
      else
        echo "building, but not testing GOARCH=${tgt}"
        GOARCH="${tgt}" ./build_${TRAVIS_OS_NAME}.sh || exit 1
      fi
    done

notifications:
  email: false

git:
  quiet: true
